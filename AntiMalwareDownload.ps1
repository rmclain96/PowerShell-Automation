<#  
.SYNOPSIS  
    Downloads the most recent versions of Anti-Malware and System Cleaning software
.DESCRIPTION  
    Downloads most up-to-date antivirus, antimalware, and system cleaning tools. By doing this,
    we are capable of storing an up-to-date repository of the installation EXEs
.NOTES  
    File Name  : Something.ps1  
    Author     : Ryan L. McLain - rmclain@ilstu.edu
    Date: 11/16/2021
#>

#FilePath for the workdir
$FilePath = "C:\TechZone\"
$MBAMDownload = "https://downloads.malwarebytes.com/file/mb-windows"
$MBAMdestination = "$FilePath\mbam.exe"

Function GET-MBAM(){

    # Check if work directory exists if not create it

    If (Test-Path -Path $FilePath -PathType Container)
    { Write-Host "$FilePath already exists" -ForegroundColor Red}
    ELSE
    { New-Item -Path $FilePath  -ItemType directory }

    # Download the installer

    # Check if Invoke-Webrequest exists otherwise execute WebClient
    
    if (Get-Command 'Invoke-Webrequest')
    {
        Invoke-WebRequest $MBAMDownload -OutFile $MBAMdestination
    }
    else
    {
        $WebClient = New-Object System.Net.WebClient
        $webclient.DownloadFile($MBAMDownload, $MBAMdestination)
    }
}

#Downloads Tron
$url="https://www.bmrf.org/repos/tron/"
#This sets $var to the equivalent of running curl and grepping for "Tron.exe" I barely understand this portion but it works well
# I will have to do more research on this so it can be implemented or improved later on
$var=(((Invoke-WebRequest -uri $url).links.href | Sort-Object -Descending)[1])
Invoke-WebRequest -uri $url$var -OutFile "$DLPath\$TronDownload"
