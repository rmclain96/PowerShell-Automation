<#  
.SYNOPSIS  
    Downloads the most recent versions of Anti-Malware and System Cleaning software
.DESCRIPTION  
    Downloads most up-to-date antivirus, antimalware, and system cleaning tools. By doing this,
    we are capable of storing an up-to-date repository of the installation EXEs
.NOTES  
    File Name  : AntiMalwareDownload.ps1  
    Author     : Ryan L. McLain - rmclain@ilstu.edu
    Date: 11/16/2021
#>

#FilePaths for the workdir
$DLPath = "C:\TechZone"
$MBAMdestination = "$DLPath\mbam.exe"
$TronDestination = "$DLPath\tron.exe"
$TronURL = "https://www.bmrf.org/repos/tron/"
$MBAMURL = "https://downloads.malwarebytes.com/file/mb-windows"

#########################################################
#Functions containing download logic

Function GET-MBAM() {

    # Download the installer
    # Check if Invoke-Webrequest exists otherwise execute WebClient
    
    if (Get-Command 'Invoke-Webrequest') {
        Invoke-WebRequest $MBAMURL -OutFile $MBAMdestination
    }
    else {
        $WebClient = New-Object System.Net.WebClient
        $webclient.DownloadFile($MBAMURL, $MBAMdestination)
    }
}

Function Get-Tron() {

    #Downloads the newest version of Tron found at bmrf.org.
    Write-Output "Downloading Most recent version in Repo: $TronURL$TronCURL"
    
    # Check if Invoke-Webrequest exists otherwise execute WebClient
    if (Get-Command 'Invoke-Webrequest') {
        Invoke-WebRequest -uri $TronURL$TronCURL -OutFile "$TronDestination"
    }
    else {
        $WebClient = New-Object System.Net.WebClient
        $webclient.DownloadFile($TronURL, $TronDestination)
    }

    Write-Output "Placing $Tron.exe at directory: $DLPath"
}





# Check if work directory exists for downloads to be placed in, if not create it
If (Test-Path -Path $DLPath -PathType Container) { 
    Write-Host "$DLPath already exists" -ForegroundColor Red 
} ELSE { 
    New-Item -Path $DLPath -ItemType directory 
}



GET-MBAM

#This sets $TRONCURL to the equivalent of running curl and grepping for "Tron.exe" I barely understand this portion but it works well
$TronCURL=(((Invoke-WebRequest -uri $TronURL).links.href | Sort-Object -Descending)[1])

Get-Tron

<#




#Setting Variables


#Invoke-WebRequest -Uri "https://www.ccleaner.com/ccleaner/download/standard" -OutFile "$DLPath\ccsetup.exe"

# Check if Invoke-Webrequest exists otherwise execute WebClient
if (Get-Command 'Invoke-Webrequest') {
    Invoke-WebRequest $MBAMDownload -OutFile $MBAMdestination
}
else {
    $WebClient = New-Object System.Net.WebClient
    $webclient.DownloadFile($MBAMDownload, $MBAMdestination)
}
#>